// Generated by IcedCoffeeScript 108.0.11
(function() {
  var Base, Subkey, SubkeyBase, Wallet, assert, constants, stellar, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Base = require('./base').Base;

  constants = require('./constants').constants;

  _ref = require('./subkey'), Subkey = _ref.Subkey, SubkeyBase = _ref.SubkeyBase;

  stellar = require('bitcoyne').stellar;

  assert = require('assert');

  exports.Wallet = Wallet = (function(_super) {
    __extends(Wallet, _super);

    Wallet.prototype.get_key_field = function() {
      return "wallet_key";
    };

    Wallet.prototype.get_new_key_section = function() {
      return this.wallet_key;
    };

    Wallet.prototype.set_new_key_section = function(m) {
      return this.wallet_key = m;
    };

    Wallet.prototype.get_new_km = function() {
      return this.wallet.km;
    };

    Wallet.prototype._type = function() {
      return constants.sig_types.wallet;
    };

    Wallet.prototype._type_v2 = function() {
      return constants.sig_types_v2.wallet;
    };

    Wallet.prototype.need_reverse_sig = function() {
      return true;
    };

    Wallet.prototype._v_customize_json = function(ret) {
      var wallet_address;
      Wallet.__super__._v_customize_json.call(this, ret);
      wallet_address = stellar.public_key.encode(this.wallet.km.get_ekid().slice(2, -1));
      assert(stellar.public_key.is_valid(wallet_address));
      return ret.body.wallet = {
        network: this.wallet.network,
        name: this.wallet.name,
        address: wallet_address
      };
    };

    Wallet.prototype._required_sections = function() {
      return Wallet.__super__._required_sections.call(this).concat(["wallet", "wallet_key"]);
    };

    Wallet.prototype._optional_sections = function() {
      return Wallet.__super__._optional_sections.call(this).concat(["revoke"]);
    };

    function Wallet(obj) {
      this.wallet = obj.wallet;
      Wallet.__super__.constructor.call(this, obj);
    }

    return Wallet;

  })(SubkeyBase);

}).call(this);
